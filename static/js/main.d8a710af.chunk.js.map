{"version":3,"sources":["Components/Header.jsx","Components/FolderModal.jsx","Components/ErrorPopUp.jsx","Components/AddItem.jsx","Components/Years.jsx","Components/Months.jsx","Components/EditItemModal.jsx","Components/ItemTable.jsx","Components/FoldersTab.jsx","Components/Main.jsx","Components/FirstVisit.jsx","Components/Home.jsx","Components/Token.jsx","App.js","index.js"],"names":["Header","props","userInfo","className","username","split","href","serverUrl","onClick","localStorage","clear","FolderModal","useState","folderName","setFolderName","createFolder","a","fetch","method","headers","Authorization","token","body","JSON","stringify","name","toggle","getFolders","setFolderAdded","Modal","isOpen","modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","onChange","e","target","value","placeholder","ModalFooter","Button","ErrorPopUp","Popover","trigger","placement","popoverOpen","popUpToggle","PopoverBody","msg","AddItem","itemName","setItemName","itemPrice","setItemPrice","itemFolder","setItemFolder","folders","setFolders","setModal","setPopoverOpen","Date","getDate","day","setDay","toLocaleDateString","month","setMonth","getFullYear","year","setYear","createItem","preventDefault","setLoading","_id","price","folder","response","setActiveYear","setActiveMonth","getCurrentDateItems","getCurrentYearMonths","json","data","useEffect","Container","autoComplete","Row","Col","sm","type","today","moment","date","InputGroup","InputGroupAddon","addonType","InputGroupText","disabled","length","map","fodler","uniqid","loading","Spinner","id","Years","Nav","tabs","yearsToDisplay","NavItem","NavLink","getActiveYear","activeYear","Months","monthsToDisplay","getActiveMonth","activeMonth","ModalExample","color","editItem","ItemTable","itemId","setItemId","items","item","setPriceTotal","prev","deleteItem","striped","responsive","bordered","style","width","itemInfo","priceTotal","EditItemModal","FoldersTab","activeFolder","setActiveFolder","folderId","setFolderId","tab","getFolderItems","setItems","checkIfFolderEmpty","deleteFolder","alert","folderAdded","Table","setYearsToDisplay","setMonthsToDisplay","getAllYears","setFirstVisit","firstVisit","acceptButton","Home","getItem","localToken","decodedToken","jwt","decode","exp","now","setToken","setUserInfo","Main","src","alt","FirstVisit","Token","url","window","location","history","pushState","setItem","to","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8a710af.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => {\n  return (\n    <div>\n      {props.userInfo ? (\n        <div>\n          <div className=\"top-bar\">\n            <div className=\"user d-flex justify-content-between \">\n              <h5 className=\"align-self-center\">\n                Welcome {props.userInfo.username.split(\" \")[0]}\n              </h5>\n              <a\n                href={props.serverUrl + \"/logout\"}\n                className=\"btn btn-dark text-light btn-sm\"\n                onClick={() => {\n                  localStorage.clear();\n                }}\n              >\n                Log out\n              </a>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"top-bar\"></div>\n      )}\n      <div className=\"header\">\n        <div className=\" d-flex flex-column justify-content-center h-75 align-items-center\">\n          <div>\n            <h1 className=\"display-5\">Balance</h1>\n          </div>\n          <div>\n            <p className=\" mt-1 text-dark\">\n              Balance your expenses, Balance your life\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\n\nconst FolderModal = (props) => {\n  const [folderName, setFolderName] = useState(\"\");\n\n  const nameHandler = (e) => {\n    setFolderName(e.target.value);\n  };\n\n  const createFolder = async () => {\n    await fetch(props.serverUrl + \"/folder/add\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: folderName,\n      }),\n    });\n    props.toggle();\n    props.getFolders();\n    props.setFolderAdded(true);\n  };\n\n  return (\n    <Modal isOpen={props.modal}>\n      <ModalHeader toggle={props.toggle}>Create Folder</ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <Label>Folder name</Label>\n            <Input\n              onChange={nameHandler}\n              placeholder=\"folder name\"\n              value={folderName}\n            />\n          </FormGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button onClick={createFolder} className=\"bg-primary\">\n          Add\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default FolderModal;\n","import React from \"react\";\nimport { Popover, PopoverBody } from \"reactstrap\";\n\nconst ErrorPopUp = (props) => {\n  return (\n    <div>\n      <Popover\n        trigger=\"focus\"\n        placement=\"bottom\"\n        isOpen={props.popoverOpen}\n        target=\"Popover1\"\n        toggle={props.popUpToggle}\n      >\n        <PopoverBody>{props.msg}</PopoverBody>\n      </Popover>\n    </div>\n  );\n};\n\nexport default ErrorPopUp;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Container,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Spinner,\n} from \"reactstrap\";\nimport uniqid from \"uniqid\";\nimport FolderModal from \"./FolderModal\";\nimport ErrorPopUp from \"./ErrorPopUp\";\nimport moment from \"moment\";\n\nconst AddItem = (props) => {\n  const [itemName, setItemName] = useState(\"\");\n  const [itemPrice, setItemPrice] = useState(\"\");\n  const [itemFolder, setItemFolder] = useState(\"\");\n  const [folders, setFolders] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [day, setDay] = useState(new Date().getDate());\n  const [month, setMonth] = useState(\n    new Date().toLocaleDateString(\"en-US\", { month: \"long\" })\n  );\n  const [year, setYear] = useState(new Date().getFullYear());\n\n  const popUpToggle = () => setPopoverOpen(!popoverOpen);\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  //INPUT HANDLERS\n  const nameHandler = (e) => {\n    setItemName(e.target.value);\n  };\n\n  const priceHandler = (e) => {\n    setItemPrice(e.target.value);\n  };\n\n  const folderHandler = (e) => {\n    setItemFolder(e.target.value);\n  };\n\n  const dateHandler = (e) => {\n    let today = moment(e.target.value);\n    setDay(moment(today).date());\n    setMonth(new Date(today).toLocaleDateString(\"en-US\", { month: \"long\" }));\n    setYear(new Date(today).getFullYear());\n  };\n\n  // CREATE A NEW ITEM\n  const createItem = async (e) => {\n    e.preventDefault();\n    if (!itemFolder || !itemName || !itemPrice) popUpToggle();\n    if (itemName && itemPrice && itemFolder) {\n      props.setLoading(true);\n      const response = await fetch(\n        props.serverUrl + \"/add/\" + props.userInfo._id,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + props.token,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            name: itemName,\n            price: itemPrice,\n            folder: itemFolder,\n            day,\n            month,\n            year,\n          }),\n        }\n      );\n      // SET THE DATE TO CURRENT DATE, JUST IN CASE USER IS IN ANOTHER\n      //YEAR / MONTH THAT IS NOT THE CURRENT ONE\n      // AND RE RENDERS\n      props.setActiveYear(new Date().getFullYear());\n      props.setActiveMonth(\n        new Date().toLocaleDateString(\"default\", { month: \"long\" })\n      );\n      setItemPrice(\"\");\n      setItemName(\"\");\n      setItemFolder(\"\");\n\n      props.getCurrentDateItems();\n      if (response) {\n        props.setLoading(false);\n        props.getCurrentYearMonths();\n      }\n    }\n  };\n\n  // GET CURRENT USER FOLDER\n  const getFolders = async () => {\n    const response = await fetch(props.serverUrl + \"/folders\", {\n      headers: {\n        Authorization: \"Bearer \" + props.token,\n      },\n    });\n    const data = await response.json();\n    setFolders(data);\n  };\n\n  useEffect(() => {\n    getFolders();\n  }, []);\n\n  return (\n    <Container className=\" pt-2\">\n      <Form autoComplete=\"off\">\n        <Row>\n          <Col sm={3}>\n            <FormGroup>\n              <Label>Description</Label>\n              <Input\n                autoComplete=\"off\"\n                onChange={nameHandler}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"what you bought/paid\"\n                value={itemName}\n              />\n            </FormGroup>\n          </Col>\n          <Col sm={3}>\n            <FormGroup>\n              <Label>Amount Spent</Label>\n              <Input\n                autoComplete=\"off\"\n                onChange={priceHandler}\n                type=\"number\"\n                name=\"price\"\n                placeholder=\"How much did you pay for\"\n                value={itemPrice}\n              />\n            </FormGroup>\n          </Col>\n          <Col sm={3}>\n            <FormGroup>\n              <Label>Date</Label>\n              <Input type=\"date\" onChange={dateHandler}></Input>\n            </FormGroup>\n          </Col>\n          <Col sm={3}>\n            <FormGroup>\n              <Label>Folder</Label>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText onClick={toggle} className=\"\">\n                    <div>\n                      <i className=\"fas fa-folder-plus\"></i>\n                    </div>\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  type=\"select\"\n                  name=\"folder\"\n                  value={itemFolder}\n                  onChange={folderHandler}\n                >\n                  <option disabled value=\"\">\n                    {folders.length > 0 ? \"Select a folder\" : \"Create folder\"}\n                  </option>\n                  {folders.map((fodler) => {\n                    return (\n                      <option key={uniqid()} value={fodler._id}>\n                        {fodler.name}\n                      </option>\n                    );\n                  })}\n                </Input>\n              </InputGroup>\n            </FormGroup>\n          </Col>\n        </Row>\n        <Col sm={12} className=\"justify-content-center d-flex mt-2\">\n          {props.loading ? (\n            <Spinner />\n          ) : (\n            <Button id=\"Popover1\" onClick={createItem} className=\"bg-primary\">\n              Add Item\n            </Button>\n          )}\n        </Col>\n      </Form>\n      {modal ? (\n        <FolderModal\n          toggle={toggle}\n          modal={modal}\n          token={props.token}\n          getFolders={getFolders}\n          setFolderAdded={props.setFolderAdded}\n          serverUrl={props.serverUrl}\n        />\n      ) : null}\n      {popoverOpen ? (\n        <ErrorPopUp\n          popoverOpen={popoverOpen}\n          popUpToggle={popUpToggle}\n          msg={\"Please fill all the field\"}\n        />\n      ) : null}\n    </Container>\n  );\n};\n\nexport default AddItem;\n","import uniqid from \"uniqid\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\n\nconst Years = (props) => {\n  return (\n    <div>\n      <Nav tabs className=\"justify-content-center d-flex\">\n        {props.yearsToDisplay.map((year) => {\n          return (\n            <NavItem key={uniqid()}>\n              <NavLink\n                id={year}\n                onClick={(e) => {\n                  props.getCurrentYearMonths(year);\n                  props.getActiveYear(e);\n                }}\n                className={\n                  props.activeYear === year\n                    ? \"active mt-2 mb-2\"\n                    : \"text-dark mt-2 mb-2 tabs\"\n                }\n              >\n                {year}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n      </Nav>\n    </div>\n  );\n};\n\nexport default Years;\n","import uniqid from \"uniqid\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\n\nconst Months = (props) => {\n  return (\n    <div>\n      <Nav tabs className=\"justify-content-center d-flex\">\n        {props.monthsToDisplay.map((month) => {\n          return (\n            <NavItem key={uniqid()}>\n              <NavLink\n                id={month}\n                onClick={props.getActiveMonth}\n                className={\n                  props.activeMonth === month ? \"active\" : \"text-dark tabs\"\n                }\n              >\n                {month}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n      </Nav>\n    </div>\n  );\n};\nexport default Months;\n","import React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\n\nconst ModalExample = (props) => {\n  const nameHandler = (e) => {\n    props.setItemName(e.target.value);\n  };\n\n  const priceHandler = (e) => {\n    props.setItemPrice(e.target.value);\n  };\n  return (\n    <div>\n      <Modal isOpen={props.modal} toggle={props.toggle}>\n        <ModalHeader toggle={props.toggle}>Modal title</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label>Description</Label>\n              <Input value={props.itemName} onChange={nameHandler} />\n            </FormGroup>\n            <FormGroup>\n              <Label>Amount Spent</Label>\n              <Input value={props.itemPrice} onChange={priceHandler} />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              props.toggle();\n              props.editItem();\n            }}\n          >\n            Edit\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ModalExample;\n","import { Table } from \"reactstrap\";\nimport { useEffect, useState } from \"react\";\nimport uniqid from \"uniqid\";\nimport EditItemModal from \"./EditItemModal\";\n\nconst ItemTable = (props) => {\n  const [modal, setModal] = useState(false);\n  const [itemName, setItemName] = useState(\"\");\n  const [itemPrice, setItemPrice] = useState(\"\");\n  const [itemId, setItemId] = useState(\"\");\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const itemInfo = (item) => {\n    setItemPrice(item.price);\n    setItemName(item.name);\n    setItemId(item._id);\n  };\n\n  // GET ITEMS\n  useEffect(() => {\n    props.items.map((item) => {\n      props.setPriceTotal((prev) => prev + item.price);\n    });\n  }, [props.items]);\n\n  // DELETE ITEM\n  const deleteItem = async (id) => {\n    await fetch(props.serverUrl + \"/item/delete/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: \"Bearer \" + props.token,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    props.getCurrentDateItems();\n  };\n\n  //EDIT ITEM\n  const editItem = async () => {\n    await fetch(props.serverUrl + \"/item/edit/\" + itemId, {\n      method: \"PUT\",\n      headers: {\n        Authorization: \"Bearer \" + props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: itemName,\n        price: itemPrice,\n      }),\n    });\n\n    props.getCurrentDateItems();\n    setItemName(\"\");\n    setItemPrice(\"\");\n    setItemId(\"\");\n  };\n\n  return (\n    <div>\n      <Table striped responsive bordered className=\"text-center\">\n        <thead>\n          <tr>\n            <th>Day</th>\n            <th>Description</th>\n            <th>Spent</th>\n            <th>Folder</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.items ? (\n            props.items.map((item) => {\n              return (\n                <tr key={uniqid()}>\n                  <td>{item.day}</td>\n                  <td>{item.name}</td>\n                  <td>{item.price}</td>\n                  <td>{item.folder.name}</td>\n                  <td style={{ width: \"10px\" }}>\n                    <i\n                      className=\"far fa-edit\"\n                      onClick={() => {\n                        toggle();\n                        itemInfo(item);\n                      }}\n                    ></i>\n                  </td>\n\n                  <td style={{ width: \"10px\" }}>\n                    <i\n                      className=\"far fa-trash-alt\"\n                      onClick={() => {\n                        deleteItem(item._id);\n                      }}\n                    ></i>\n                  </td>\n                </tr>\n              );\n            })\n          ) : (\n            <p>no items</p>\n          )}\n        </tbody>\n        <thead>\n          <tr>\n            <th className=\"th-empty\"></th>\n            <th>Total</th>\n            <th>{props.priceTotal} </th>\n          </tr>\n        </thead>\n      </Table>\n      {modal ? (\n        <EditItemModal\n          toggle={toggle}\n          modal={modal}\n          itemName={itemName}\n          itemPrice={itemPrice}\n          setItemName={setItemName}\n          setItemPrice={setItemPrice}\n          editItem={editItem}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default ItemTable;\n","import { useState, useEffect } from \"react\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\nimport uniqid from \"uniqid\";\n\nconst FoldersTab = (props) => {\n  const [folders, setFolders] = useState([]);\n  const [activeFolder, setActiveFolder] = useState(\"All\");\n  const [folderId, setFolderId] = useState();\n\n  const toggle = (tab) => {\n    if (activeFolder !== tab) {\n      setActiveFolder(tab);\n    }\n    props.setPriceTotal(0);\n  };\n  // GET CURRENT USER FOLDER\n  const getFolders = async () => {\n    const response = await fetch(\n      \"https://infinite-woodland-48479.herokuapp.com/folders\",\n      {\n        headers: {\n          Authorization: \"Bearer \" + props.token,\n        },\n      }\n    );\n    const data = await response.json();\n    setFolders(data);\n    props.setFolderAdded(false);\n  };\n\n  // GET ITEMS FROM SPECIFIC FOLDER\n  const getFolderItems = async (id) => {\n    props.setLoading(true);\n    const response = await fetch(\n      \"https://infinite-woodland-48479.herokuapp.com/folder/\" +\n        id +\n        \"/\" +\n        props.activeYear +\n        \"/\" +\n        props.activeMonth,\n      {\n        headers: {\n          Authorization: \"Bearer \" + props.token,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    props.setItems(data);\n    if (response) props.setLoading(false);\n  };\n\n  //CHECK IF FOLDER IS EMPTY\n  const checkIfFolderEmpty = async (id) => {\n    const response = await fetch(props.serverUrl + \"/item/folder/\" + folderId, {\n      headers: {\n        Authorization: \"Bearer \" + props.token,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    if (data.length === 0) {\n      deleteFolder();\n    } else alert(\"Please delete all items before deleting the folder\");\n  };\n\n  // DELETE FOLDER\n  const deleteFolder = async () => {\n    await fetch(props.serverUrl + \"/folder/delete/\" + folderId, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: \"Bearer \" + props.token,\n      },\n    });\n    getFolders();\n  };\n\n  useEffect(() => {\n    getFolders();\n  }, [props.folderAdded]);\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            onClick={() => {\n              toggle(\"All\");\n              props.getCurrentDateItems();\n            }}\n            className={activeFolder === \"All\" ? \" active\" : \"text-dark tabs\"}\n          >\n            All\n          </NavLink>\n        </NavItem>\n        {folders.map((folder) => {\n          return (\n            <NavItem key={uniqid()}>\n              <NavLink\n                id={folder._id}\n                onClick={() => {\n                  toggle(folder.name);\n                  getFolderItems(folder._id);\n                  setFolderId(folder._id);\n                }}\n                className={\n                  activeFolder === folder.name ? \" active\" : \"text-dark tabs\"\n                }\n              >\n                {folder.name}{\" \"}\n                {activeFolder === folder.name ? (\n                  <i\n                    className=\"far fa-trash-alt\"\n                    onClick={checkIfFolderEmpty}\n                  ></i>\n                ) : null}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n      </Nav>\n    </div>\n  );\n};\n\nexport default FoldersTab;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport AddItem from \"./AddItem\";\nimport Years from \"./Years\";\nimport Months from \"./Months\";\nimport ItemTable from \"./ItemTable\";\nimport FoldersTab from \"./FoldersTab\";\nimport { Spinner } from \"reactstrap\";\n\nconst Table = (props) => {\n  //STORES ALL THE YEARS THE USER HAVE DATA IN\n  const [yearsToDisplay, setYearsToDisplay] = useState([]);\n  // STORES ALL THE MONTHS TO DISPLAY ACCORDING TO THE YEAR\n  const [monthsToDisplay, setMonthsToDisplay] = useState([]);\n  // STORES THE ITEMS TO DISPLAY\n  const [items, setItems] = useState([]);\n  // STORE THE YEAR AND MONTHS FOR FUTURE SEARCHES\n  const [activeYear, setActiveYear] = useState(new Date().getFullYear());\n  const [activeMonth, setActiveMonth] = useState(\n    new Date().toLocaleDateString(\"en-US\", { month: \"long\" })\n  );\n  const [priceTotal, setPriceTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [folderAdded, setFolderAdded] = useState(false);\n\n  //GET ALL YEARS THAT HAVE DATA FROM THE CURRENT USER\n  const getAllYears = async () => {\n    const response = await fetch(props.serverUrl + \"/items/year\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + props.token,\n      },\n    });\n    const data = await response.json();\n    setYearsToDisplay(data);\n  };\n\n  // GET THE CURRENT MONTHS OF THE CURRENT YEAR\n  const getCurrentYearMonths = async (year) => {\n    if (!year) year = new Date().getFullYear();\n    const response = await fetch(props.serverUrl + \"/items/year/\" + year, {\n      headers: {\n        Authorization: \"Bearer \" + props.token,\n      },\n    });\n    const data = await response.json();\n    setMonthsToDisplay(data);\n  };\n\n  // GET THE CURRENT MONTH AND YEAR DATA\n  const getCurrentDateItems = async () => {\n    setLoading(true);\n    const response = await fetch(\n      props.serverUrl + \"/items/current/\" + activeYear + \"/\" + activeMonth,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + props.token,\n        },\n      }\n    );\n    const data = await response.json();\n    setItems(data);\n    setPriceTotal(0);\n    if (response) setLoading(false);\n  };\n\n  // GET ACTIVE YEAR && RESET ACTIVE MONTH\n  const getActiveYear = (e) => {\n    setActiveYear(e.target.id);\n    setActiveMonth();\n  };\n\n  //GET ACTIVE MONTH\n  const getActiveMonth = (e) => {\n    setActiveMonth(e.target.id);\n  };\n\n  useEffect(() => {\n    getAllYears();\n    getCurrentYearMonths();\n    props.setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    getCurrentDateItems();\n  }, [activeMonth]);\n\n  return (\n    <div>\n      <AddItem\n        userInfo={props.userInfo}\n        token={props.token}\n        getCurrentDateItems={getCurrentDateItems}\n        setActiveYear={setActiveYear}\n        setActiveMonth={setActiveMonth}\n        setLoading={props.setLoading}\n        loading={props.loading}\n        setFolderAdded={setFolderAdded}\n        serverUrl={props.serverUrl}\n        getCurrentYearMonths={getCurrentYearMonths}\n      />\n      {/* DISPLAY ALL THE YEARS WITH DATA */}\n      <div>\n        <Years\n          yearsToDisplay={yearsToDisplay}\n          getCurrentYearMonths={getCurrentYearMonths}\n          getActiveYear={getActiveYear}\n          activeYear={activeYear}\n          serverUrl={props.serverUrl}\n        />\n      </div>\n      <div>\n        <Months\n          monthsToDisplay={monthsToDisplay}\n          getActiveMonth={getActiveMonth}\n          activeMonth={activeMonth}\n          serverUrl={props.serverUrl}\n        />\n      </div>\n      <h1 className=\"text-center\">{activeMonth} </h1>\n      <FoldersTab\n        token={props.token}\n        setItems={setItems}\n        activeYear={activeYear}\n        activeMonth={activeMonth}\n        getCurrentDateItems={getCurrentDateItems}\n        setPriceTotal={setPriceTotal}\n        setLoading={setLoading}\n        loading={loading}\n        setFolderAdded={setFolderAdded}\n        folderAdded={folderAdded}\n        serverUrl={props.serverUrl}\n      />\n      {loading ? (\n        <div className=\"d-flex justify-content-center mt-3\">\n          <Spinner />\n        </div>\n      ) : (\n        <ItemTable\n          items={items}\n          token={props.token}\n          priceTotal={priceTotal}\n          setPriceTotal={setPriceTotal}\n          getCurrentDateItems={getCurrentDateItems}\n          serverUrl={props.serverUrl}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nconst FolderModal = (props) => {\n  const toggle = () => {\n    props.setFirstVisit(!props.firstVisit);\n  };\n\n  const acceptButton = async () => {\n    toggle();\n\n    await fetch(props.serverUrl + \"/user/\" + props.userInfo._id, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + props.token,\n      },\n    });\n  };\n\n  return (\n    <Modal isOpen={props.firstVisit}>\n      <ModalHeader toggle={toggle}>Welcome!</ModalHeader>\n      <ModalBody>\n        <p className=\"welcome-text\">\n          Items you add will be saved in the current month and year, you can\n          specify a folder to keep things organized, when a new month starts,\n          the program will automatically save new items in the new month. <br />\n          Same goes for the year. <br />\n          you cand edit and delete items description and price, but not the\n          date, be careful with that. <br />\n          In order to delete a folder you must first delete all the items\n          belonging to that specific folder. <br />\n          Hope you find this app usefull and thanks for the visit!\n        </p>\n      </ModalBody>\n      <ModalFooter>\n        <Button onClick={acceptButton} className=\"bg-primary\">\n          Got it!\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default FolderModal;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport jwt from \"jsonwebtoken\";\nimport Main from \"./Main\";\nimport { Spinner } from \"reactstrap\";\nimport FirstVisit from \"./FirstVisit\";\n\nconst Home = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [firstVisit, setFirstVisit] = useState();\n\n  useEffect(() => {\n    // check for local token\n    (async () => {\n      if (localStorage.getItem(\"token\")) {\n        const localToken = localStorage.getItem(\"token\");\n        const decodedToken = jwt.decode(localToken);\n        if (decodedToken) {\n          const expiresAt = new Date(decodedToken.exp * 1000);\n          if (expiresAt < new Date(Date.now())) {\n            localStorage.clear();\n          } else {\n            props.setToken(localToken);\n            // FETCH THE USER DATA\n            const response = await fetch(\n              props.serverUrl + \"/user/\" + decodedToken._id,\n              {\n                headers: {\n                  Authorization: \"Bearer \" + localToken,\n                },\n              }\n            );\n            const data = await response.json();\n            props.setUserInfo(data);\n          }\n        }\n      }\n    })();\n  }, []);\n\n  //CHECK IF IT IS USER FIRST VISIT\n  useEffect(() => {\n    if (props.userInfo) {\n      if (props.userInfo.firstVisit) {\n        setFirstVisit(true);\n      }\n    }\n  }, [props.userInfo]);\n\n  return (\n    <div>\n      <Header userInfo={props.userInfo} serverUrl={props.serverUrl} />\n      {props.userInfo ? (\n        <div className=\"content\">\n          <div className=\"img\"></div>\n          <Main\n            userInfo={props.userInfo}\n            token={props.token}\n            loading={loading}\n            setLoading={setLoading}\n            serverUrl={props.serverUrl}\n          />\n        </div>\n      ) : (\n        <div className=\" d-flex justify-content-center content align-items-center\">\n          <div className=\"img\"></div>\n          {loading ? (\n            <Spinner type=\"grow\" color=\"dark\" />\n          ) : (\n            <div className=\"google-container\">\n              <div>\n                <p>Please log in to continue</p>\n              </div>\n              <div className=\"google-btn\">\n                <div className=\"google-icon-wrapper\">\n                  <img\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                    alt=\"\"\n                    className=\"google-icon\"\n                  />\n                </div>\n                <a\n                  href={props.serverUrl + \"/google/login\"}\n                  className=\"btn-text\"\n                  onClick={() => setLoading(true)}\n                >\n                  <b>Sign in with google</b>\n                </a>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n      {firstVisit ? (\n        <FirstVisit\n          firstVisit={firstVisit}\n          setFirstVisit={setFirstVisit}\n          token={props.token}\n          userInfo={props.userInfo}\n          serverUrl={props.serverUrl}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Token = (props) => {\n  useEffect(() => {\n    const url = window.location.href;\n    const urlToken = url.split(\"?\")[1];\n    //split token=\n    const token = urlToken.split(\"=\")[1];\n    props.setToken(token);\n    window.history.pushState({}, \"\", url.split(\"?\")[0]);\n    localStorage.setItem(\"token\", token);\n  }, []);\n  return <div>{props.token ? <Redirect to=\"/\" /> : null}</div>;\n};\n\nexport default Token;\n","import { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Home from \"./Components/Home\";\nimport Token from \"./Components/Token\";\nimport React from \"react\";\n\nfunction App() {\n  const serverUrl = \"https://infinite-woodland-48479.herokuapp.com\";\n\n  const [token, setToken] = useState();\n  const [userInfo, setUserInfo] = useState();\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home\n            token={token}\n            setToken={setToken}\n            setUserInfo={setUserInfo}\n            userInfo={userInfo}\n            serverUrl={serverUrl}\n          />\n        </Route>\n        <Route path=\"/logged\">\n          <Token token={token} serverUrl={serverUrl} setToken={setToken} />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}