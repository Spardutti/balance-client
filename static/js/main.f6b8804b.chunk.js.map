{"version":3,"sources":["Components/Header.jsx","Components/FolderModal.jsx","Components/ErrorPopUp.jsx","Components/AddItem.jsx","Components/Years.jsx","Components/Months.jsx","Components/EditItemModal.jsx","Components/ItemTable.jsx","Components/FoldersTab.jsx","Components/Main.jsx","Components/FirstVisit.jsx","Components/Home.jsx","Components/Token.jsx","App.js","index.js"],"names":["Header","props","userInfo","className","username","split","href","onClick","localStorage","clear","FolderModal","useState","folderName","setFolderName","createFolder","a","fetch","method","headers","Authorization","token","body","JSON","stringify","name","toggle","getFolders","setFolderAdded","Modal","isOpen","modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","onChange","e","target","value","placeholder","ModalFooter","Button","ErrorPopUp","Popover","trigger","placement","popoverOpen","popUpToggle","PopoverBody","msg","AddItem","itemName","setItemName","itemPrice","setItemPrice","itemFolder","setItemFolder","folders","setFolders","setModal","setPopoverOpen","createItem","preventDefault","setLoading","_id","price","folder","response","setActiveYear","Date","getFullYear","setActiveMonth","toLocaleDateString","month","getCurrentDateItems","json","data","useEffect","Container","autoComplete","Row","Col","sm","type","InputGroup","InputGroupAddon","addonType","InputGroupText","disabled","length","map","fodler","uniqid","loading","Spinner","id","Years","Nav","tabs","yearsToDisplay","year","NavItem","NavLink","getCurrentYearMonths","getActiveYear","activeYear","Months","monthsToDisplay","getActiveMonth","activeMonth","ModalExample","color","editItem","ItemTable","itemId","setItemId","items","item","setPriceTotal","prev","deleteItem","striped","responsive","bordered","style","width","itemInfo","priceTotal","EditItemModal","FoldersTab","activeFolder","setActiveFolder","folderId","setFolderId","tab","getFolderItems","setItems","checkIfFolderEmpty","deleteFolder","alert","folderAdded","Table","setYearsToDisplay","setMonthsToDisplay","getAllYears","Home","getItem","localToken","decodedToken","jwt","decode","exp","now","setToken","setUserInfo","Main","src","alt","firstVisit","FirstVisit","Token","url","window","location","history","pushState","setItem","to","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6b8804b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => {\n  return (\n    <div>\n      {props.userInfo ? (\n        <div>\n          <div className=\"top-bar\">\n            <div className=\"user d-flex justify-content-between \">\n              <h5 className=\"align-self-center\">\n                Welcome {props.userInfo.username.split(\" \")[0]}\n              </h5>\n              <a\n                href=\"https://infinite-woodland-48479.herokuapp.com/logout\"\n                className=\"btn btn-dark text-light btn-sm\"\n                onClick={() => {\n                  localStorage.clear();\n                }}\n              >\n                Log out\n              </a>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"top-bar\"></div>\n      )}\n      <div className=\"header\">\n        <div className=\" d-flex flex-column justify-content-center h-75 align-items-center\">\n          <div>\n            <h1 className=\"display-5\">Balance</h1>\n          </div>\n          <div>\n            <p className=\" mt-1 text-dark\">\n              Balance your expenses, Balance your life\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\n\nconst FolderModal = (props) => {\n  const [folderName, setFolderName] = useState(\"\");\n\n  const nameHandler = (e) => {\n    setFolderName(e.target.value);\n  };\n\n  const createFolder = async () => {\n    await fetch(\"https://infinite-woodland-48479.herokuapp.com/folder/add\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: folderName,\n      }),\n    });\n    props.toggle();\n    props.getFolders();\n    props.setFolderAdded(true);\n  };\n\n  return (\n    <Modal isOpen={props.modal}>\n      <ModalHeader toggle={props.toggle}>Create Folder</ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <Label>Folder name</Label>\n            <Input\n              onChange={nameHandler}\n              placeholder=\"folder name\"\n              value={folderName}\n            />\n          </FormGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button onClick={createFolder} className=\"bg-primary\">\n          Add\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default FolderModal;\n","import React from \"react\";\nimport { Popover, PopoverBody } from \"reactstrap\";\n\nconst ErrorPopUp = (props) => {\n  return (\n    <div>\n      <Popover\n        trigger=\"focus\"\n        placement=\"bottom\"\n        isOpen={props.popoverOpen}\n        target=\"Popover1\"\n        toggle={props.popUpToggle}\n      >\n        <PopoverBody>{props.msg}</PopoverBody>\n      </Popover>\n    </div>\n  );\n};\n\nexport default ErrorPopUp;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Container,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Spinner,\n} from \"reactstrap\";\nimport uniqid from \"uniqid\";\nimport FolderModal from \"./FolderModal\";\nimport ErrorPopUp from \"./ErrorPopUp\";\n\nconst AddItem = (props) => {\n  const [itemName, setItemName] = useState(\"\");\n  const [itemPrice, setItemPrice] = useState();\n  const [itemFolder, setItemFolder] = useState(\"\");\n  const [folders, setFolders] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const popUpToggle = () => setPopoverOpen(!popoverOpen);\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  //INPUT HANDLERS\n  const nameHandler = (e) => {\n    setItemName(e.target.value);\n  };\n\n  const priceHandler = (e) => {\n    setItemPrice(e.target.value);\n  };\n\n  const folderHandler = (e) => {\n    setItemFolder(e.target.value);\n  };\n\n  // CREATE A NEW ITEM\n  const createItem = async (e) => {\n    e.preventDefault();\n    if (!itemFolder || !itemName || !itemPrice) popUpToggle();\n    if (itemName && itemPrice && itemFolder) {\n      props.setLoading(true);\n      const response = await fetch(\n        \"https://infinite-woodland-48479.herokuapp.com/add/\" +\n          props.userInfo._id,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + props.token,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            name: itemName,\n            price: itemPrice,\n            folder: itemFolder,\n          }),\n        }\n      );\n      // SET THE DATE TO CURRENT DATE, JUST IN CASE USER IS IN ANOTHER\n      //YEAR / MONTH THAT IS NOT THE CURRENT ONE\n      // AND RE RENDERS\n      props.setActiveYear(new Date().getFullYear());\n      props.setActiveMonth(\n        new Date().toLocaleDateString(\"default\", { month: \"long\" })\n      );\n      setItemPrice(\"\");\n      setItemName(\"\");\n      setItemFolder(\"\");\n      props.getCurrentDateItems();\n      if (response) {\n        props.setLoading(false);\n      }\n    }\n  };\n\n  // GET CURRENT USER FOLDER\n  const getFolders = async () => {\n    const response = await fetch(\n      \"https://infinite-woodland-48479.herokuapp.com/folders\",\n      {\n        headers: {\n          Authorization: \"Bearer \" + props.token,\n        },\n      }\n    );\n    const data = await response.json();\n    setFolders(data);\n  };\n\n  useEffect(() => {\n    getFolders();\n  }, []);\n\n  return (\n    <Container className=\" pt-2\">\n      <Form autoComplete=\"off\">\n        <Row>\n          <Col sm={4}>\n            <FormGroup>\n              <Label>Description</Label>\n              <Input\n                autoComplete=\"off\"\n                onChange={nameHandler}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"what you bought/paid\"\n                value={itemName}\n              />\n            </FormGroup>\n          </Col>\n          <Col sm={4}>\n            <FormGroup>\n              <Label>Amount Spent</Label>\n              <Input\n                autoComplete=\"off\"\n                onChange={priceHandler}\n                type=\"number\"\n                name=\"price\"\n                placeholder=\"How much did you pay for\"\n                value={itemPrice}\n              />\n            </FormGroup>\n          </Col>\n          <Col sm={4}>\n            <FormGroup>\n              <Label>Folder</Label>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText onClick={toggle} className=\"\">\n                    <div>\n                      <i className=\"fas fa-folder-plus\"></i>\n                    </div>\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  type=\"select\"\n                  name=\"folder\"\n                  value={itemFolder}\n                  onChange={folderHandler}\n                >\n                  <option disabled value=\"\">\n                    {folders.length > 0 ? \"Select a folder\" : \"Create folder\"}\n                  </option>\n                  {folders.map((fodler) => {\n                    return (\n                      <option key={uniqid()} value={fodler._id}>\n                        {fodler.name}\n                      </option>\n                    );\n                  })}\n                </Input>\n              </InputGroup>\n            </FormGroup>\n          </Col>\n        </Row>\n        <Col sm={12} className=\"justify-content-center d-flex mt-2\">\n          {props.loading ? (\n            <Spinner />\n          ) : (\n            <Button id=\"Popover1\" onClick={createItem} className=\"bg-primary\">\n              Add Item\n            </Button>\n          )}\n        </Col>\n      </Form>\n      {modal ? (\n        <FolderModal\n          toggle={toggle}\n          modal={modal}\n          token={props.token}\n          getFolders={getFolders}\n          setFolderAdded={props.setFolderAdded}\n        />\n      ) : null}\n      {popoverOpen ? (\n        <ErrorPopUp\n          popoverOpen={popoverOpen}\n          popUpToggle={popUpToggle}\n          msg={\"Please fill all the field\"}\n        />\n      ) : null}\n    </Container>\n  );\n};\n\nexport default AddItem;\n","import uniqid from \"uniqid\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\n\nconst Years = (props) => {\n  return (\n    <div>\n      <Nav tabs className=\"justify-content-center d-flex\">\n        {props.yearsToDisplay.map((year) => {\n          return (\n            <NavItem key={uniqid()}>\n              <NavLink\n                id={year}\n                onClick={(e) => {\n                  props.getCurrentYearMonths(year);\n                  props.getActiveYear(e);\n                }}\n                className={\n                  props.activeYear === year\n                    ? \"active mt-2 mb-2\"\n                    : \"text-dark mt-2 mb-2 tabs\"\n                }\n              >\n                {year}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n      </Nav>\n    </div>\n  );\n};\n\nexport default Years;\n","import uniqid from \"uniqid\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\n\nconst Months = (props) => {\n  return (\n    <div>\n      <Nav tabs className=\"justify-content-center d-flex\">\n        {props.monthsToDisplay.map((month) => {\n          return (\n            <NavItem key={uniqid()}>\n              <NavLink\n                id={month}\n                onClick={props.getActiveMonth}\n                className={\n                  props.activeMonth === month ? \"active\" : \"text-dark tabs\"\n                }\n              >\n                {month}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n      </Nav>\n    </div>\n  );\n};\nexport default Months;\n","import React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n} from \"reactstrap\";\n\nconst ModalExample = (props) => {\n  const nameHandler = (e) => {\n    props.setItemName(e.target.value);\n  };\n\n  const priceHandler = (e) => {\n    props.setItemPrice(e.target.value);\n  };\n  return (\n    <div>\n      <Modal isOpen={props.modal} toggle={props.toggle}>\n        <ModalHeader toggle={props.toggle}>Modal title</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Input value={props.itemName} onChange={nameHandler} />\n            </FormGroup>\n            <FormGroup>\n              <Input value={props.itemPrice} onChange={priceHandler} />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              props.toggle();\n              props.editItem();\n            }}\n          >\n            Edit\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ModalExample;\n","import { Table } from \"reactstrap\";\nimport { useEffect, useState } from \"react\";\nimport uniqid from \"uniqid\";\nimport EditItemModal from \"./EditItemModal\";\n\nconst ItemTable = (props) => {\n  const [modal, setModal] = useState(false);\n  const [itemName, setItemName] = useState(\"\");\n  const [itemPrice, setItemPrice] = useState(\"\");\n  const [itemId, setItemId] = useState(\"\");\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const itemInfo = (item) => {\n    setItemPrice(item.price);\n    setItemName(item.name);\n    setItemId(item._id);\n  };\n\n  // GET ITEMS\n  useEffect(() => {\n    props.items.map((item) => {\n      props.setPriceTotal((prev) => prev + item.price);\n    });\n  }, [props.items]);\n\n  // DELETE ITEM\n  const deleteItem = async (id) => {\n    await fetch(\n      \"https://infinite-woodland-48479.herokuapp.com/item/delete/\" + id,\n      {\n        method: \"DELETE\",\n        headers: {\n          Authorization: \"Bearer \" + props.token,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    props.getCurrentDateItems();\n  };\n\n  //EDIT ITEM\n  const editItem = async () => {\n    await fetch(\n      \"https://infinite-woodland-48479.herokuapp.com/item/edit/\" + itemId,\n      {\n        method: \"PUT\",\n        headers: {\n          Authorization: \"Bearer \" + props.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: itemName,\n          price: itemPrice,\n        }),\n      }\n    );\n\n    props.getCurrentDateItems();\n    setItemName(\"\");\n    setItemPrice(\"\");\n    setItemId(\"\");\n  };\n\n  return (\n    <div>\n      <Table striped responsive bordered className=\"text-center\">\n        <thead>\n          <tr>\n            <th>Description</th>\n            <th>Spent</th>\n            <th>Folder</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.items ? (\n            props.items.map((item) => {\n              return (\n                <tr key={uniqid()}>\n                  <td>{item.name}</td>\n                  <td>{item.price}</td>\n                  <td>{item.folder.name}</td>\n                  <td style={{ width: \"10px\" }}>\n                    <i\n                      className=\"far fa-edit\"\n                      onClick={() => {\n                        toggle();\n                        itemInfo(item);\n                      }}\n                    ></i>\n                  </td>\n                  <td style={{ width: \"10px\" }}>\n                    <i\n                      className=\"far fa-trash-alt\"\n                      onClick={() => {\n                        deleteItem(item._id);\n                      }}\n                    ></i>\n                  </td>\n                </tr>\n              );\n            })\n          ) : (\n            <p>no items</p>\n          )}\n        </tbody>\n        <thead>\n          <tr>\n            <th>Total</th>\n            <th>{props.priceTotal} </th>\n          </tr>\n        </thead>\n      </Table>\n      {modal ? (\n        <EditItemModal\n          toggle={toggle}\n          modal={modal}\n          itemName={itemName}\n          itemPrice={itemPrice}\n          setItemName={setItemName}\n          setItemPrice={setItemPrice}\n          editItem={editItem}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default ItemTable;\n","import { useState, useEffect } from \"react\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\nimport uniqid from \"uniqid\";\n\nconst FoldersTab = (props) => {\n  const [folders, setFolders] = useState([]);\n  const [activeFolder, setActiveFolder] = useState(\"All\");\n  const [folderId, setFolderId] = useState();\n\n  const toggle = (tab) => {\n    if (activeFolder !== tab) {\n      setActiveFolder(tab);\n    }\n    props.setPriceTotal(0);\n  };\n  // GET CURRENT USER FOLDER\n  const getFolders = async () => {\n    const response = await fetch(\n      \"https://infinite-woodland-48479.herokuapp.com/folders\",\n      {\n        headers: {\n          Authorization: \"Bearer \" + props.token,\n        },\n      }\n    );\n    const data = await response.json();\n    setFolders(data);\n    props.setFolderAdded(false);\n  };\n\n  // GET ITEMS FROM SPECIFIC FOLDER\n  const getFolderItems = async (id) => {\n    props.setLoading(true);\n    const response = await fetch(\n      \"https://infinite-woodland-48479.herokuapp.com/folder/\" +\n        id +\n        \"/\" +\n        props.activeYear +\n        \"/\" +\n        props.activeMonth,\n      {\n        headers: {\n          Authorization: \"Bearer \" + props.token,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    props.setItems(data);\n    if (response) props.setLoading(false);\n  };\n\n  //CHECK IF FOLDER IS EMPTY\n  const checkIfFolderEmpty = async (id) => {\n    const response = await fetch(\n      \"https://infinite-woodland-48479.herokuapp.com/item/folder/\" + folderId,\n      {\n        headers: {\n          Authorization: \"Bearer \" + props.token,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    if (data.length === 0) {\n      deleteFolder();\n    } else alert(\"Please delete all items before deleting the folder\");\n  };\n\n  // DELETE FOLDER\n  const deleteFolder = async () => {\n    await fetch(\n      \"https://infinite-woodland-48479.herokuapp.com/folder/delete/\" + folderId,\n      {\n        method: \"DELETE\",\n        headers: {\n          Authorization: \"Bearer \" + props.token,\n        },\n      }\n    );\n    getFolders();\n  };\n\n  useEffect(() => {\n    getFolders();\n  }, [props.folderAdded]);\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            onClick={() => {\n              toggle(\"All\");\n              props.getCurrentDateItems();\n            }}\n            className={activeFolder === \"All\" ? \" active\" : \"text-dark tabs\"}\n          >\n            All\n          </NavLink>\n        </NavItem>\n        {folders.map((folder) => {\n          return (\n            <NavItem key={uniqid()}>\n              <NavLink\n                id={folder._id}\n                onClick={() => {\n                  toggle(folder.name);\n                  getFolderItems(folder._id);\n                  setFolderId(folder._id);\n                }}\n                className={\n                  activeFolder === folder.name ? \" active\" : \"text-dark tabs\"\n                }\n              >\n                {folder.name}{\" \"}\n                {activeFolder === folder.name ? (\n                  <i\n                    className=\"far fa-trash-alt\"\n                    onClick={checkIfFolderEmpty}\n                  ></i>\n                ) : null}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n      </Nav>\n    </div>\n  );\n};\n\nexport default FoldersTab;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport AddItem from \"./AddItem\";\nimport Years from \"./Years\";\nimport Months from \"./Months\";\nimport ItemTable from \"./ItemTable\";\nimport FoldersTab from \"./FoldersTab\";\nimport { Spinner } from \"reactstrap\";\n\nconst Table = (props) => {\n  //STORES ALL THE YEARS THE USER HAVE DATA IN\n  const [yearsToDisplay, setYearsToDisplay] = useState([]);\n  // STORES ALL THE MONTHS TO DISPLAY ACCORDING TO THE YEAR\n  const [monthsToDisplay, setMonthsToDisplay] = useState([]);\n  // STORES THE ITEMS TO DISPLAY\n  const [items, setItems] = useState([]);\n  // STORE THE YEAR AND MONTHS FOR FUTURE SEARCHES\n  const [activeYear, setActiveYear] = useState(new Date().getFullYear());\n  const [activeMonth, setActiveMonth] = useState(\n    new Date().toLocaleDateString(\"en-US\", { month: \"long\" })\n  );\n  const [priceTotal, setPriceTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [folderAdded, setFolderAdded] = useState(false);\n\n  //GET ALL YEARS THAT HAVE DATA FROM THE CURRENT USER\n  const getAllYears = async () => {\n    const response = await fetch(\n      \"https://infinite-woodland-48479.herokuapp.com/items/year\",\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + props.token,\n        },\n      }\n    );\n    const data = await response.json();\n    setYearsToDisplay(data);\n  };\n\n  // GET THE CURRENT MONTHS OF THE CURRENT YEAR\n  const getCurrentYearMonths = async (year) => {\n    if (!year) year = new Date().getFullYear();\n    const response = await fetch(\n      \"https://infinite-woodland-48479.herokuapp.com/items/year/\" + year,\n      {\n        headers: {\n          Authorization: \"Bearer \" + props.token,\n        },\n      }\n    );\n    const data = await response.json();\n    setMonthsToDisplay(data);\n  };\n\n  // GET THE CURRENT MONTH AND YEAR DATA\n  const getCurrentDateItems = async () => {\n    setLoading(true);\n    const response = await fetch(\n      \"https://infinite-woodland-48479.herokuapp.com/items/current/\" +\n        activeYear +\n        \"/\" +\n        activeMonth,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + props.token,\n        },\n      }\n    );\n    const data = await response.json();\n    setItems(data);\n    setPriceTotal(0);\n    if (response) setLoading(false);\n  };\n\n  // GET ACTIVE YEAR && RESET ACTIVE MONTH\n  const getActiveYear = (e) => {\n    setActiveYear(e.target.id);\n    setActiveMonth();\n  };\n\n  //GET ACTIVE MONTH\n  const getActiveMonth = (e) => {\n    setActiveMonth(e.target.id);\n  };\n\n  useEffect(() => {\n    getAllYears();\n    getCurrentYearMonths();\n    props.setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    getCurrentDateItems();\n  }, [activeMonth]);\n\n  return (\n    <div>\n      <AddItem\n        userInfo={props.userInfo}\n        token={props.token}\n        getCurrentDateItems={getCurrentDateItems}\n        setActiveYear={setActiveYear}\n        setActiveMonth={setActiveMonth}\n        setLoading={props.setLoading}\n        loading={props.loading}\n        setFolderAdded={setFolderAdded}\n      />\n      {/* DISPLAY ALL THE YEARS WITH DATA */}\n      <div>\n        <Years\n          yearsToDisplay={yearsToDisplay}\n          getCurrentYearMonths={getCurrentYearMonths}\n          getActiveYear={getActiveYear}\n          activeYear={activeYear}\n        />\n      </div>\n      <div>\n        <Months\n          monthsToDisplay={monthsToDisplay}\n          getActiveMonth={getActiveMonth}\n          activeMonth={activeMonth}\n        />\n      </div>\n      <h1 className=\"text-center\">{activeMonth} </h1>\n      <FoldersTab\n        token={props.token}\n        setItems={setItems}\n        activeYear={activeYear}\n        activeMonth={activeMonth}\n        getCurrentDateItems={getCurrentDateItems}\n        setPriceTotal={setPriceTotal}\n        setLoading={setLoading}\n        loading={loading}\n        setFolderAdded={setFolderAdded}\n        folderAdded={folderAdded}\n      />\n      {loading ? (\n        <div className=\"d-flex justify-content-center mt-3\">\n          <Spinner />\n        </div>\n      ) : (\n        <ItemTable\n          items={items}\n          token={props.token}\n          priceTotal={priceTotal}\n          setPriceTotal={setPriceTotal}\n          getCurrentDateItems={getCurrentDateItems}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nconst FolderModal = () => {\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const acceptButton = () => {\n    toggle();\n  };\n\n  return (\n    <Modal isOpen={modal}>\n      <ModalHeader toggle={toggle}>Create Folder</ModalHeader>\n      <ModalBody>\n        <p>Hello and Welcome</p>\n      </ModalBody>\n      <ModalFooter>\n        <Button onClick={acceptButton} className=\"bg-primary\">\n          Okay!\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default FolderModal;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport jwt from \"jsonwebtoken\";\nimport Main from \"./Main\";\nimport { Spinner } from \"reactstrap\";\nimport FirstVisit from \"./FirstVisit\";\n\nconst Home = (props) => {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // check for local token\n    (async () => {\n      if (localStorage.getItem(\"token\")) {\n        const localToken = localStorage.getItem(\"token\");\n        const decodedToken = jwt.decode(localToken);\n        if (decodedToken) {\n          const expiresAt = new Date(decodedToken.exp * 1000);\n          if (expiresAt < new Date(Date.now())) {\n            localStorage.clear();\n          } else {\n            props.setToken(localToken);\n            // FETCH THE USER DATA\n            const response = await fetch(\n              \"https://infinite-woodland-48479.herokuapp.com/user/\" +\n                decodedToken._id,\n              {\n                headers: {\n                  Authorization: \"Bearer \" + localToken,\n                },\n              }\n            );\n            const data = await response.json();\n            props.setUserInfo(data);\n          }\n        }\n      }\n    })();\n  }, []);\n\n  return (\n    <div>\n      <Header userInfo={props.userInfo} />\n      {props.userInfo ? (\n        <div className=\"content\">\n          <div className=\"img\"></div>\n          <Main\n            userInfo={props.userInfo}\n            token={props.token}\n            loading={loading}\n            setLoading={setLoading}\n          />\n        </div>\n      ) : (\n        <div className=\" d-flex justify-content-center content align-items-center\">\n          <div className=\"img\"></div>\n          {loading ? (\n            <Spinner type=\"grow\" color=\"dark\" />\n          ) : (\n            <div className=\"google-container\">\n              <div>\n                <p>Please log in to continue</p>\n              </div>\n              <div className=\"google-btn\">\n                <div className=\"google-icon-wrapper\">\n                  <img\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                    alt=\"\"\n                    className=\"google-icon\"\n                  />\n                </div>\n                <a\n                  href=\"https://infinite-woodland-48479.herokuapp.com/google/login\"\n                  className=\"btn-text\"\n                  onClick={() => setLoading(true)}\n                >\n                  <b>Sign in with google</b>\n                </a>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n      {props.userInfo ? (\n        props.userInfo.firstVisit ? (\n          <FirstVisit />\n        ) : null\n      ) : null}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Token = (props) => {\n  useEffect(() => {\n    const url = window.location.href;\n    const urlToken = url.split(\"?\")[1];\n    //split token=\n    const token = urlToken.split(\"=\")[1];\n    props.setToken(token);\n    window.history.pushState({}, \"\", url.split(\"?\")[0]);\n    localStorage.setItem(\"token\", token);\n  }, []);\n  return <div>{props.token ? <Redirect to=\"/\" /> : null}</div>;\n};\n\nexport default Token;\n","import { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Home from \"./Components/Home\";\nimport Token from \"./Components/Token\";\nimport React from \"react\";\n\nfunction App() {\n  const [token, setToken] = useState();\n  const [userInfo, setUserInfo] = useState();\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home\n            token={token}\n            setToken={setToken}\n            setUserInfo={setUserInfo}\n            userInfo={userInfo}\n          />\n        </Route>\n        <Route path=\"/logged\">\n          <Token token={token} setToken={setToken} />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}